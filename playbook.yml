---
- name: Personal OS Setup
  hosts: localhost
  become: yes
  vars:
    ansible_user_id: saeed

  tasks:
    # 1️⃣ System Preparation
    - name: Update and upgrade system packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install essential system tools
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - htop
        - curl
        - wget
        - net-tools
        - libssl-dev
        - build-essential
        - vim

    - name: Create personal directories
      file:
        path: "/home/{{ ansible_user_id }}/{{ item }}"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: "0755"
      loop:
        - resume
        - develop

    # 2️⃣ Install Package Managers
    - name: Install Snap package manager
      apt:
        name: snapd
        state: present

    - name: Ensure Snap service is started and enabled
      systemd:
        name: snapd
        enabled: yes
        state: started

    # 3️⃣ Configure Development Environment
    - name: Configure Git username and email
      shell: |
        git config --global user.name "naseriboroujeni"
        git config --global user.email "naseriboroujeni@gmail.com"

    - name: Install OpenJDK 21
      apt:
        name: openjdk-21-jdk
        state: present

    - name: Install Node.js and npm
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - nodejs
        - npm

    - name: Install Rust using rustup
      shell: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      args:
        creates: /home/{{ ansible_user_id }}/.cargo/bin/rustc
      become: no

    - name: Install WasmEdge
      shell: curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash
      args:
        creates: /usr/local/bin/wasmedge
      become: no

    # 4️⃣ Install Development Tools
    - name: Install IDEs and Tools via Snap
      snap:
        name: "{{ item }}"
        classic: yes
      loop:
        - code # VS Code
        - intellij-idea-community
        - rustrover

    - name: Install Database & API Tools
      snap:
        name: "{{ item }}"
      loop:
        - dbeaver-ce
        - postman

    # 5️⃣ Install Communication & Multimedia Tools
    - name: Install Microsoft Teams (Linux)
      snap:
        name: teams-for-linux
        classic: yes

    - name: Install Telegram Desktop
      snap:
        name: telegram-desktop

    - name: Install VLC & Cheese
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - vlc
        - cheese

    # 6️⃣ Install Browsers & Remote Access Tools
    - name: Add repository keys for Chrome & AnyDesk
      shell: |
        wget -qO - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg
        wget -qO - https://keys.anydesk.com/repos/DEB-GPG-KEY | gpg --dearmor -o /usr/share/keyrings/anydesk.gpg

    - name: Add repositories for Chrome & AnyDesk
      shell: |
        echo "deb [signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list
        echo "deb [signed-by=/usr/share/keyrings/anydesk.gpg] http://deb.anydesk.com/ all main" | tee /etc/apt/sources.list.d/anydesk.list

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install Google Chrome & AnyDesk
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - google-chrome-stable
        - anydesk

    # 7️⃣ Configure Desktop Environment
    - name: Set GNOME Dark Theme
      shell: |
        export DISPLAY=:0
        export XAUTHORITY=/home/{{ ansible_user_id }}/.Xauthority
        gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
      become: no
      environment:
        DISPLAY: ":0"
        XAUTHORITY: "/home/{{ ansible_user_id }}/.Xauthority"

    - name: Install GNOME Shell Extensions and Dependencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - gnome-shell-extensions
        - chrome-gnome-shell

    # 8️⃣ Install Docker & PostgreSQL Container
    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Create a PostgreSQL Docker container
      shell: |
        docker run --name postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres
      args:
        creates: /var/lib/docker/containers
